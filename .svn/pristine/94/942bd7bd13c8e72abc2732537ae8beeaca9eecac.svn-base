package kr.co.jykjy.controller.member;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.tomcat.util.http.fileupload.FileItem;
import org.apache.tomcat.util.http.fileupload.servlet.ServletFileUpload;
import org.apache.tomcat.util.http.fileupload.servlet.ServletRequestContext;

import kr.co.jykjy.domain.Member;
import kr.co.jykjy.domain.Product;
import kr.co.jykjy.domain.Member.MemberBuilder;
import kr.co.jykjy.mapper.MemberMapper;
import kr.co.jykjy.service.MemberService;
import lombok.extern.log4j.Log4j;
import util.MybatisUtils;
import util.UploadUtils;
import util.Webutils;

@Log4j
@WebServlet("/member/myPage")
public class MyPageController extends HttpServlet{
	
	private MemberService memberService = new MemberService();
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		Member member = Webutils.getMember(req);
		if(member == null) { //비로그인
			Webutils.alert(resp, "로그인해주세요", Webutils.CONTEXT_PATH + "/member/login");
			return;
		}
		
		req.setAttribute("member", memberService.getMember(member.getId()));
		req.getRequestDispatcher("/WEB-INF/views/member/myPage.jsp").forward(req, resp);
	}
	
	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		Member member = Webutils.getMember(req);
		req.setCharacterEncoding("utf-8");	
		String id = req.getParameter("id");
		String pw  = req.getParameter("pw");
		String name = req.getParameter("name");
		String phone = req.getParameter("phone"); 
		String email = req.getParameter("email");
		String addr = req.getParameter("addr");
		
//		Member member = Member.builder().id(id).pw(pw).name(name).phone(phone).email(email).addr(addr).build();
//		System.out.println(member);
		
		ServletFileUpload fileUpload = UploadUtils.init();
		
		List<FileItem> items = fileUpload.parseRequest(new ServletRequestContext(req));
		MemberBuilder memberBuilder = Member.builder();
		Product.ProductBuilder productBuilder = Product.builder();
		log.info("itemsitemsitemsitemsitemsitemsitemsitems"+ items);
		for (FileItem fi : items) {
			
			if (fi.getSize() == 0) continue;
				System.out.printf("파라미터 명 : %s, 파일명 : %s, 파일 크기 : %d \n", fi.getFieldName(), fi.getName(), fi.getSize());
			try {
				String origin = fi.getName();
				String ext = "";
				if (origin.lastIndexOf(".") != -1) {
					ext = origin.substring(origin.lastIndexOf("."));
				}
				String uuid = UUID.randomUUID() + ext;
				String todayPath = new SimpleDateFormat("yyyy/MM/dd").format(new Date());
				File path = new File(UploadUtils.REPOSITORY);
//				File path = new File(req.getServletContext().getRealPath("/upload/"));
				
				if (!path.exists()) {
					path.mkdirs();
				}
				Member realMember = Member.builder().mUuid(uuid).mPath(todayPath).id(member.getId()).build();
				fi.write(new File(path, uuid));
				memberService.updateimg(realMember);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		
		//resp.sendRedirect(Webutils.CONTEXT_PATH + "/member/myPage");
	}
	
}

