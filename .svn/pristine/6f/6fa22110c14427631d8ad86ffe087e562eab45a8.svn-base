package kr.co.jykjy.controller.cart;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.co.jykjy.domain.Cart;
import kr.co.jykjy.domain.Criteria;
import kr.co.jykjy.domain.PageDTO;
import kr.co.jykjy.service.CartService;
import kr.co.jykjy.service.ProductCartService;
import kr.co.jykjy.service.ProductService;

@WebServlet("/cart/list")
public class CartList extends HttpServlet{
	
	private ProductService productService = ProductService.getProductService();
	private ProductCartService productCartService = new ProductCartService();
//	private CartService cartService = new CartService();

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		String cate = req.getParameter("category");
		String pageNum = req.getParameter("pageNum");
		String amount = req.getParameter("amount");
		String type = req.getParameter("type");
		String keyword = req.getParameter("keyword");
		
		Criteria.CriteriaBuilder cb = Criteria.builder();
		
		if (cate != null) {
			cb.category(Integer.parseInt(cate));
		}
		if (pageNum != null) {
			cb.pageNum(Integer.parseInt(pageNum));
		}
		if (amount != null) {
			cb.amount(Integer.parseInt(amount));
		}
		if (type != null) {
			cb.type(type);
		}
		if (keyword != null) {
			cb.keyword(keyword);
		}
		
		Criteria criteria = cb.build();
		
		long proNo = Long.parseLong(req.getParameter("proNo"));
		Cart cart = productCartService.findByCartNo("sm");
		cart.setAttachs(productService.findByNo(proNo));

		req.setAttribute("pageDTO", new PageDTO(criteria, productService.getTotal(criteria)));
		req.setAttribute("product", cart);
		
		req.getRequestDispatcher("/WEB-INF/views/order/cart.jsp").forward(req, resp);
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {

	}

}
