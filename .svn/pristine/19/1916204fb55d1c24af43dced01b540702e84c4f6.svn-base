package kr.co.jykjy.controller.board;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import kr.co.jykjy.domain.Board;
import kr.co.jykjy.domain.Criteria;
import kr.co.jykjy.service.BoardService;
import lombok.extern.log4j.Log4j;

@Log4j
@WebServlet("/board/modify")
public class BoardModify extends HttpServlet {
	private BoardService boardService = BoardService.getBoardService();
	
	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		String bno = req.getParameter("bno");
		
		Board board = boardService.get(Long.valueOf(bno));
		
		String cate = req.getParameter("category");
		String pageNum = req.getParameter("pageNum");
		String amount = req.getParameter("amount");
		String type = req.getParameter("type");
		String keyword = req.getParameter("keyword");
		
		Criteria.CriteriaBuilder cb = Criteria.builder();
		if(cate != null) {
			cb.category(Integer.parseInt(cate));
		}
		if(pageNum != null) {
			cb.pageNum(Integer.parseInt(pageNum));
		}
		if(amount != null) {
			cb.amount(Integer.parseInt(amount));
		}
		if(type != null) {
			cb.type(type);
		}
		if(keyword != null) {
			cb.keyword(keyword);
		}
		Criteria criteria = cb.build();
		
		req.setAttribute("cri", criteria);
		
		req.setAttribute("board", board);
		// 파라미터값으로 받아온 category번호에 따라 조건문으로 다른 jsp파일로 보내는 방법
		if(Integer.parseInt(cate) == 2) {
			// cno가 2일때
			req.getRequestDispatcher("/WEB-INF/views/board/event_modify.jsp").forward(req, resp);
		} else if(Integer.parseInt(cate) == 3) {
			// cno가 3일때
			req.getRequestDispatcher("/WEB-INF/views/board/FAQ_modify.jsp").forward(req, resp);
		} else {
			// cno가 1또는 4일때
			req.getRequestDispatcher("/WEB-INF/views/board/board_modify.jsp").forward(req, resp);
		}
	}

	@Override
	protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		req.setCharacterEncoding("utf-8");
		String bno = req.getParameter("bno");
		String title = req.getParameter("title");
		String content = req.getParameter("content");
		
		String cate = req.getParameter("category");
		String pageNum = req.getParameter("pageNum");
		String amount = req.getParameter("amount");
		String type = req.getParameter("type");
		String keyword = req.getParameter("keyword");
		
		Criteria.CriteriaBuilder cb = Criteria.builder();
		if(cate != null) {
			cb.category(Integer.parseInt(cate));
		}
		if(pageNum != null) {
			cb.pageNum(Integer.parseInt(pageNum));
		}
		if(amount != null) {
			cb.amount(Integer.parseInt(amount));
		}
		if(type != null) {
			cb.type(type);
		}
		if(keyword != null) {
			cb.keyword(keyword);
		}
		Criteria criteria = cb.build();
		
		Board board = Board.builder().title(title).content(content).bno(Long.valueOf(bno)).build();
		log.info(board);
		boardService.modify(board);//
		
		resp.sendRedirect("view?bno=" + bno + "&" + criteria.getQs());
	}
	
	
}
